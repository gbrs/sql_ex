Задания с https://learndb.ru/courses


1.1
SELECT 'Hello, world!'


1.2
SELECT 'One', 'Two', 'Three'


1.3
SELECT *
FROM city


1.4
SELECT first_name, middle_name, last_name
FROM employee


1.5
select 1 as one, 2 as TWO, 3 as "Three"


1.6
SELECT now() as server_date,
       name,
       upper(name) as name_upper
  FROM city


1.7
SELECT first_name || ' ' || last_name as full_name
  FROM employee


1.8
SELECT product_id,
       price,
       price/2 AS price_sale
  FROM product_price


1.9
SELECT DISTINCT first_name
  FROM employee





2.1
SELECT *
FROM category
WHERE parent_category_id = 2


2.2
SELECT *
  FROM store_address
 WHERE city_id = 6
   AND address = 'ул. Чкалова, 42'


2.3
SELECT *
  FROM store_address
 WHERE opening_hours IS NOT NULL
   AND phone IS NOT NULL


2.4
SELECT *
  FROM employee
 WHERE (first_name = 'Виктор') OR (middle_name = 'Иванович')


2.5
SELECT *
  FROM employee
 WHERE NOT (first_name = 'Виктор' OR middle_name = 'Иванович' OR middle_name IS NULL)


2.6
SELECT *
  FROM employee
 WHERE (rank_id = 'CEO'
    OR rank_id = 'CHIEF'
    OR rank_id = 'GENERAL_MANAGER')
   AND first_name = 'Виктор'


2.7
SELECT *
  FROM store_address
 WHERE store_id = 100
   AND city_id != 1


2.8
SELECT *
  FROM product_price
 WHERE price BETWEEN 5000 AND 15000
    OR price BETWEEN 30000 AND 40000


2.9
SELECT *
  FROM employee
 WHERE rank_id NOT IN ('SELLER', 'MANAGER')


2.10
SELECT first_name, last_name
  FROM employee
 WHERE last_name LIKE 'М%в'


2.11
SELECT *
  FROM city
 ORDER BY name


2.12
SELECT employee_id,
       store_id,
       rank_id,
       last_name
  FROM employee
 ORDER BY store_id, rank_id, last_name DESC


2.13
SELECT *
  FROM product_price
 ORDER BY price DESC
 LIMIT 5


2.14
SELECT *
  FROM product_price
 ORDER BY price DESC
 LIMIT 5
OFFSET 2





3.1
SELECT *
  FROM product
  JOIN category
    ON category.category_id = product.category_id


3.2
SELECT p.purchase_id,
       p.purchase_date,
       p.store_id,
       pi.product_id,
       pi.count * pi.price as total_price
  FROM purchase p
  JOIN purchase_item pi
    ON pi.purchase_id = p.purchase_id
 ORDER BY p.store_id, p.purchase_date DESC


3.3
SELECT p.purchase_id,
       p.purchase_date,
       pi.product_id,
       pi.count,
       pi.price
  FROM purchase p
  JOIN purchase_item pi
    ON pi.purchase_id = p.purchase_id
 WHERE pi.count >= 5
 ORDER BY p.store_id, p.purchase_date DESC


копировал решения из раздела Решение. Там мой запрос переформатировался в красивый вид.
Теперь только я понял, что Решение - это вариант сайта! :).
На простых задачах они один в один совпадали с моим решением и я не сообразил :)


3.4
SELECT
  e.last_name,
  e.first_name,
  e.store_id store_id_employee,
  r.store_id store_id_rank,
  r.rank_id,
  r.name rank_name
FROM
  Employee e
  INNER JOIN Rank r
    ON
      r.store_id != e.store_id
      AND r.rank_id = e.rank_id
      OR
      r.store_id = e.store_id

ORDER BY
  e.last_name,
  e.first_name,
  store_id_rank,
  r.rank_id


3.5
SELECT
  DISTINCT
  e1.store_id,
  e1.rank_id,
  e2.rank_id rank_id_other
FROM employee e1
JOIN employee e2
  ON e1.store_id = e2.store_id
  AND e1.rank_id != e2.rank_id
ORDER BY
  store_id,
  rank_id,
  rank_id_other


3.6
SELECT
  c.name category_name,
  p.name product_name
FROM
  Category c
  LEFT JOIN Product p
  ON c.category_id = p.category_id
ORDER BY
  category_name,
  product_name


3.7
SELECT
  time_offset,
  name city_name
FROM
  City c
  RIGHT JOIN Timezone tz ON c.timezone_id = tz.timezone_id
ORDER BY
  time_offset,
  city_name





