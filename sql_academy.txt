Задания с https://sql-academy.org


1
SELECT name FROM Passenger


2
SELECT name
FROM Company


3
SELECT *
FROM trip
WHERE town_from = 'Moscow'


4
SELECT name
FROM Passenger
WHERE name LIKE '%man'


5
SELECT COUNT(*) AS count
FROM Trip
GROUP BY plane
HAVING plane = 'TU-134'


6
SELECT DISTINCT name
FROM Trip
  INNER JOIN Company ON Trip.company = Company.id
WHERE plane = 'Boeing'


7
SELECT DISTINCT plane
FROM Trip
WHERE town_to = 'Moscow'


8
SELECT town_to, TIMEDIFF(time_in, time_out) flight_time
FROM Trip
WHERE town_from = 'Paris'


9
SELECT DISTINCT name
FROM trip
  INNER JOIN Company ON Trip.company = Company.id
WHERE town_from = 'Vladivostok'


10
SELECT *
FROM Trip
WHERE TIME(time_out) BETWEEN '10:00:00' AND '14:00:00'


11
SELECT name
FROM Passenger
WHERE LENGTH(name) = (
    SELECT MAX(LENGTH(name))
    FROM Passenger)


12
SELECT Trip.id trip,
  COUNT(*) count
FROM Trip
  INNER JOIN Pass_in_trip ON Pass_in_trip.trip = Trip.id
GROUP BY Trip.id


13
SELECT DISTINCT p1.name
FROM Passenger p1
JOIN Passenger p2 ON p1.name = p2.name
AND p1.id != p2.id


14
SELECT town_to
FROM Trip
  INNER JOIN Pass_in_trip ON Pass_in_trip.trip = Trip.id
  INNER JOIN Passenger ON Passenger.id = Pass_in_trip.passenger
WHERE name = 'Bruce Willis'


15
SELECT Trip.time_in
FROM
    Trip
    INNER JOIN Pass_in_trip ON Trip.id = Pass_in_trip.trip
    INNER JOIN Passenger ON Pass_in_trip.passenger = Passenger.id
WHERE
    Passenger.name = 'Steve Martin'
    AND Trip.town_to = 'London'


16
SELECT name, COUNT(*) count
FROM Pass_in_trip pit
JOIN Passenger psg ON pit.passenger = psg.id
GROUP BY psg.id
ORDER BY count DESC, name


17
SELECT
    member_name,
    status,
    SUM(amount * unit_price) costs
FROM
    FamilyMembers
    INNER JOIN Payments ON Payments.family_member = FamilyMembers.member_id
WHERE
    YEAR(date) = '2005'
GROUP BY
    FamilyMembers.member_id


18
SELECT member_name
FROM FamilyMembers
WHERE birthday = (SELECT MIN(birthday) FROM FamilyMembers)


19
SELECT DISTINCT status
FROM Payments
  INNER JOIN FamilyMembers ON Payments.family_member = FamilyMembers.member_id
  INNER JOIN Goods ON Goods.good_id = Payments.good
WHERE good_name = 'potato'


20
SELECT
    status,
    member_name,
    SUM(amount * unit_price ) costs
FROM
    FamilyMembers fm
    INNER JOIN Payments p ON fm.member_id = p.family_member
    INNER JOIN Goods g ON g.good_id = p.good
    INNER JOIN GoodTypes gt ON g.type = gt.good_type_id
WHERE
    good_type_name = 'entertainment'
GROUP BY
    member_id


21
SELECT
    good_name
FROM
    Goods g
    INNER JOIN Payments p ON g.good_id = p.good
GROUP BY
    good
HAVING
    COUNT(*) > 1


22
SELECT member_name
FROM FamilyMembers
WHERE status = 'mother'


23-1
WITH max_delicacies_price AS (
  SELECT
    MAX(unit_price)
  FROM
    Goods
    INNER JOIN Payments p ON good = good_id
    INNER JOIN GoodTypes gt ON type = good_type_id
  WHERE
    good_type_name = 'delicacies'
)

SELECT
  good_name, unit_price
FROM
  Goods
  INNER JOIN Payments p ON good = good_id
  INNER JOIN GoodTypes gt ON type = good_type_id
WHERE
  good_type_name = 'delicacies'
  AND unit_price = (SELECT * FROM max_delicacies_price)


23-2
SELECT
  good_name,
  MAX(unit_price) OVER (ORDER BY unit_price DESC) unit_price
FROM
  Goods
  INNER JOIN Payments p ON good = good_id
  INNER JOIN GoodTypes gt ON type = good_type_id
WHERE
  good_type_name = 'delicacies'
LIMIT
  1


23-3
SELECT
  good_name,
  unit_price
FROM
  Goods
  INNER JOIN Payments p ON good = good_id
  INNER JOIN GoodTypes gt ON type = good_type_id
WHERE
  good_type_name = 'delicacies'
ORDER BY
  unit_price DESC
LIMIT
  1


24
SELECT
    member_name,
    SUM(amount * unit_price) costs
FROM
    FamilyMembers fm
    INNER JOIN Payments p ON fm.member_id = p.family_member
WHERE
    YEAR(p.date) = 2005
    AND MONTH(p.date) = 6
GROUP BY
    member_name


25
SELECT
  good_name
FROM
  Goods g
WHERE
  good_id NOT IN(
        SELECT
          good
        FROM
          Payments p
        WHERE
          date >= '2005-01-01'
          AND date < '2006-01-01'
        )


26
SELECT
  good_type_name
FROM
  GoodTypes
WHERE
  good_type_id NOT IN (SELECT
                          type
                        FROM
                          GoodTypes gt
                          INNER JOIN Goods ON good_type_id = type
                          INNER JOIN Payments ON good_id = good
                        WHERE
                          YEAR(date) = 2005);


29
SELECT
  DISTINCT name
FROM
  Trip
  INNER JOIN Pass_in_trip ON trip = Trip.id
  INNER JOIN Passenger ON passenger = Passenger.id
WHERE
  town_to = 'Moscow'
  AND plane = 'TU-134'


30
SELECT
  trip,
  COUNT(passenger) count
FROM
  Pass_in_trip
GROUP BY
  trip
ORDER BY
  count DESC


31
SELECT
  *
FROM
  FamilyMembers
WHERE
  member_name LIKE '%Quincey%'


32
SELECT FLOOR(AVG(TIMESTAMPDIFF(YEAR, birthday, CURDATE()))) as age
FROM FamilyMembers


33
SELECT
  AVG(unit_price) cost
FROM
  Payments
  INNER JOIN Goods ON good = good_id
WHERE
  good_name LIKE '%caviar%'


34
SELECT COUNT(*) count
FROM Class
WHERE name LIKE '10%'


35
SELECT
  COUNT(DISTINCT classroom) as count
FROM
  Schedule
WHERE
  date = '2019-09-02'


36
SELECT *
FROM Student
WHERE address LIKE 'ul. Pushkina%'


37
SELECT
  FLOOR(DATEDIFF(NOW(), MAX(birthday)) / 365.25) year
FROM
  Student


38
SELECT COUNT(*) count
FROM Student
WHERE first_name = 'Anna'


39
SELECT COUNT(*) count
FROM Class
INNER JOIN Student_in_class ON Student_in_class.class = Class.id
WHERE name = '10 B'


40
SELECT
  sub.name subjects
FROM
  Schedule sch
  INNER JOIN Teacher tch ON tch.id = sch.teacher
  INNER JOIN Subject sub ON sub.id = sch.subject
WHERE
  tch.last_name = 'Romashkin'
  AND tch.middle_name LIKE 'P%'
  AND tch.first_name LIKE 'P%'


41
SELECT start_pair
FROM Timepair
WHERE id = 4


42
SELECT
  TIMEDIFF(
    (SELECT end_pair FROM Timepair WHERE id = 4),
    (SELECT start_pair FROM Timepair WHERE id = 2)
  ) AS time


44
SELECT
  TIMESTAMPDIFF(YEAR, MIN(std.birthday), NOW()) as max_year
FROM
  Student std
  INNER JOIN Student_in_class sic ON std.id = sic.student
  INNER JOIN Class cls ON sic.class = cls.id
WHERE
  cls.name LIKE '10 _'


43
SELECT
   tch.last_name last_name
FROM
  Schedule sch
  INNER JOIN Teacher tch ON tch.id = sch.teacher
  INNER JOIN Subject sub ON sub.id = sch.subject
WHERE
  sub.name = 'Physical Culture'
ORDER BY
  last_name


46
SELECT
  DISTINCT name
FROM
  Class
  INNER JOIN Schedule ON Class.id = Schedule.class
  INNER JOIN Teacher ON Schedule.teacher = Teacher.id
WHERE
  last_name = 'Krauze'


48
SELECT
  cls.name,
  COUNT(std.id) AS count
FROM
  Class cls
  INNER JOIN Student_in_class sic ON cls.id = sic.class
  INNER JOIN Student std ON std.id = sic.student
GROUP BY
  class
ORDER BY
  count DESC


49
SELECT

  (SELECT
    COUNT(std.id) count_10_A
  FROM
    Class cls
    INNER JOIN Student_in_class sic ON cls.id = sic.class
    INNER JOIN Student std ON std.id = sic.student
  WHERE
    cls.name = '10 A'
  )

  /

  (SELECT
    COUNT(std.id) total
  FROM
    Class cls
    INNER JOIN Student_in_class sic ON cls.id = sic.class
    INNER JOIN Student std ON std.id = sic.student)

  * 100 AS percent


50
SELECT
  FLOOR(
    100 *

    (SELECT
      COUNT(*)
    FROM
      Student
    WHERE
      YEAR(birthday) = 2000)

    /

    (SELECT
      COUNT(*)
    FROM
      Student)

  ) percent


53
UPDATE FamilyMembers
SET member_name = 'Andie Anthony'
WHERE member_name = 'Andie Quincey'


54
DELETE FROM FamilyMembers
WHERE member_name LIKE '%Quincey%'


56
DELETE FROM Trip
WHERE town_from = 'Moscow'


59
SELECT
  *
FROM
  Users
WHERE
  phone_number LIKE '%+375%'


61
SELECT
  DISTINCT rms.*
FROM
  Reservations res
  INNER JOIN Rooms rms ON res.room_id = rms.id
WHERE
  DAYOFYEAR(start_date) < 85
  AND DAYOFYEAR(end_date) > 77


62
SELECT
  RIGHT(email, LENGTH(email) - LOCATE('@', email)) domain,
  COUNT(*) count
FROM
  Users
GROUP BY
  domain
ORDER BY
  count DESC,
  domain


63
SELECT
  CONCAT(last_name , '.', LEFT(first_name, 1), '.') name
FROM
  Student
ORDER BY
  name


64
SELECT
  YEAR(start_date) as year,
  MONTH(start_date) as month,
  COUNT(*) as amount
FROM
  Reservations
GROUP BY
  year,
  month
ORDER BY
  year,
  month


65
SELECT
  rm.id room_id,
  FLOOR(AVG(rev.rating)) rating
FROM
  Rooms rm
  INNER JOIN Reservations res ON rm.id = res.room_id
  INNER JOIN Reviews rev ON res.id = rev.reservation_id
GROUP BY
  rm.id


66
SELECT
  rm.home_type,
  rm.address,
  COALESCE(SUM(DATEDIFF(res.end_date, res.start_date)), 0) as days,
  COALESCE(SUM(res.total), 0) as total_fee
FROM
  Rooms rm
  LEFT JOIN Reservations res ON rm.id = res.room_id
WHERE
  rm.has_tv = 1
  AND rm.has_internet = 1
  AND rm.has_kitchen = 1
  AND rm.has_air_con = 1
GROUP BY
  rm.id


67
SELECT
  CONCAT(
    LEFT(TIME(time_out), 5),
    ', ',
    DAY(time_out),
    '.',
    MONTH(time_out),
    ' - ',
    LEFT(TIME(time_in), 5),
    ', ',
    DAY(time_in),
    '.',
    MONTH(time_in)
  ) flight_time
FROM
  Trip


70
SELECT
  CASE
    WHEN price <= 100 THEN 'economy'
    WHEN price >= 200 THEN 'premium'
    ELSE 'comfort'
  END category,
  COUNT(*) count
FROM
  Rooms
GROUP BY
  category


72
SELECT
  res.room_id,
  CEIL(AVG(res.price)) avg_price
FROM
  Reservations res
  INNER JOIN Rooms rm ON res.room_id = rm.id
GROUP BY
  res.room_id


73
SELECT
  res.room_id,
  COUNT(*) count
FROM
  Reservations res
  INNER JOIN Rooms rm ON res.room_id = rm.id
GROUP BY
  res.room_id
HAVING
  MOD(COUNT(*), 2) = 1


74
SELECT
  id,
  CASE WHEN has_internet= 1 THEN 'YES' ELSE 'NO' END AS has_internet
FROM
  Rooms


75
SELECT
  last_name,
  first_name,
  birthday
FROM
  Student
WHERE
  MONTH(birthday) = 5


76
SELECT
  name,
  IF (id in (SELECT owner_id FROM Rooms), 1, 0) is_owner,
  IF (id in (SELECT user_id FROM Reservations), 1, 0) is_tenant
FROM
  Users


94
WITH double_customers AS (
    (
        SELECT
          pu.customer_key
        FROM
          Purchase pu
          INNER JOIN Product pr USING (product_key)
        WHERE
          MONTH(date) = 3
          AND YEAR(date) = 2024
          AND name = 'Laptop'
    )

    INTERSECT

    (
        SELECT
          pu.customer_key
        FROM
          Purchase pu
          INNER JOIN Product pr USING (product_key)
        WHERE
          MONTH(date) = 3
          AND YEAR(date) = 2024
          AND name = 'Monitor'
    )
)

SELECT
    name
FROM
    double_customers dc
    INNER JOIN Customer cu USING (customer_key)


99
SELECT
  SUM(price * items) income_from_female
FROM
  Purchases
WHERE
  user_gender = 'female'
  OR user_gender = 'f'




