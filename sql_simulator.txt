https://lab.karpov.courses/learning/152/
КУРС «СИМУЛЯТОР SQL» от Карпов коурсес


3.1
select
  name,
  price,
  product_id
from
  products
order by
  name


3.2
select
  courier_id,
  order_id,
  action,
  time
from
  courier_actions
order by
  courier_id,
  action,
  time desc


3.3
select
  order_id,
  creation_time
from
  orders
limit
  50


3.4
select
  name,
  price
from
  products
order by
  price desc
limit
  5


3.5
select
  name product_name,
  price product_price
from
  products
order by
  price desc
limit
  5


3.6
select
  price::VARCHAR
from
  products


3.7
select
  courier_id,
  date_part('year', birth_date) birth_year
from
  couriers
order by
  birth_year


3.8
select
  courier_id,
  coalesce(
    date_part('year', birth_date) :: varchar,
    'unknown'
  ) birth_year
from
  couriers
order by
  birth_year desc


3.9
select
  concat('Заказ № ', order_id, ' создан ', creation_time::date) AS order_info
from
  orders
limit
  200


3.10
select
  name,
  price,
  1.05 * price new_price
from
  products
order by
  new_price desc


3.11
select
  name,
  price,
  round(1.05 * price) new_price
from
  products
order by
  new_price desc


3.12
select
  name,
  price,
  case
    when name != 'икра' and price > 100 then 1.05 * price
    else price
  end AS new_price
from
  products
order by
  new_price desc


3.13
select
  product_id,
  name,
  price,
  price / 120 * 20 tax,
  price - price / 120 * 20 price_before_tax
from
  products
order by
  price_before_tax desc

------------------

4.1
select
  product_id,
  name,
  price
from
  products
where
  price <= 100
order by
  price desc


4.2
select product_id, name
from products
where name LIKE '%чай%'


4.3
select product_id, name
from products
where name LIKE 'с%' and name not LIKE '% %'


4.4
select
  product_id,
  name,
  price,
  '25%' discount,
  0.75 * price price_discounted
from
  products
where
  name LIKE '%чай%'
  and name not LIKE '%чай%гриб%'
  and price > 60


4.5
select
  user_id,
  order_id,
  action,
  time
from
  user_actions
where
  user_id in (170, 200, 230)
  and time between '2022-08-25' and '2022-09-05'
order by
  time desc


4.6
select courier_id, birth_date, sex
from couriers
where birth_date is null
order by courier_id


4.7
select user_id, birth_date
from users
where birth_date is not null and sex = 'male'
order by birth_date desc
limit 50


4.8
select order_id, time
from courier_actions
where courier_id = 100 and action = 'deliver_order'
order by time desc
limit 10


4.9
select
  order_id
from
  user_actions
where
  DATE_PART('year', time) = '2022'
  and DATE_PART('month', time) = '08'
  and action = 'create_order'


4.10
select
  courier_id
from
  couriers
where
  DATE_PART('year', birth_date) between 1990 and 1995


4.11
select user_id, order_id, action, time
from user_actions
where time between '2022-08-25 12:00:00' and '2022-08-25 16:00:00'
order by time desc


4.12
select
    product_id,
    name,
    price,
    round(
        case
            when name in (
                'сахар', 'сухарики', 'сушки', 'семечки',
                'масло льняное', 'виноград', 'масло оливковое',
                'арбуз', 'батон', 'йогурт', 'сливки', 'гречка',
                'овсянка', 'макароны', 'баранина', 'апельсины',
                'бублики', 'хлеб', 'горох', 'сметана', 'рыба копченая',
                'мука', 'шпроты', 'сосиски', 'свинина', 'рис',
                'масло кунжутное', 'сгущенка', 'ананас', 'говядина',
                'соль', 'рыба вяленая', 'масло подсолнечное', 'яблоки',
                'груши', 'лепешка', 'молоко', 'курица', 'лаваш', 'вафли', 'мандарины')
            then price / 11
            else price / 6
        end
    , 2) as tax,
  price - round(
                case
                    when name in (
                        'сахар', 'сухарики', 'сушки', 'семечки',
                        'масло льняное', 'виноград', 'масло оливковое',
                        'арбуз', 'батон', 'йогурт', 'сливки', 'гречка',
                        'овсянка', 'макароны', 'баранина', 'апельсины',
                        'бублики', 'хлеб', 'горох', 'сметана', 'рыба копченая',
                        'мука', 'шпроты', 'сосиски', 'свинина', 'рис',
                        'масло кунжутное', 'сгущенка', 'ананас', 'говядина',
                        'соль', 'рыба вяленая', 'масло подсолнечное', 'яблоки',
                        'груши', 'лепешка', 'молоко', 'курица', 'лаваш', 'вафли', 'мандарины')
                    then price / 11
                    else price / 6
                end
            , 2) as price_before_tax
from
  products
order by
  price_before_tax desc
___________________________________

5.1
select
  DISTINCT user_id
from
  user_actions
order by
  user_id


5.2
select
  DISTINCT courier_id, order_id
from
  courier_actions
order by
  courier_id, order_id


5.3
select
  max(price) max_price, min(price) min_price
from
  products


5.4
select
  COUNT(DISTINCT user_id) unique_users,
  COUNT(DISTINCT order_id) unique_orders,
  ROUND(COUNT(DISTINCT order_id)::DECIMAL / COUNT(DISTINCT user_id), 2) orders_per_user
from
  user_actions


5.5
select count(courier_id) couriers_count
from couriers
where sex = 'female'


5.6
SELECT
  COUNT(product_ids) orders_count
FROM
  orders
WHERE
  array_length(product_ids, 1) >= 9


5.7
SELECT
  AVG(price) avg_price
FROM
  products
WHERE
  (name LIKE '%чай%'
  OR name LIKE '%кофе%')
  AND name NOT LIKE '%чайный гриб%'
  AND name NOT LIKE '%иван-чай%'


5.8
SELECT
  MIN(AGE(birth_date))::VARCHAR min_age
FROM
  couriers
WHERE
  sex = 'male'


5.9
SELECT
  MAX(AGE(birth_date)) - MIN(AGE(birth_date)) age_diff
FROM
  users
WHERE
  sex = 'male'


5.10
SELECT
  SUM(price) order_price
FROM
  products
WHERE
  name = 'сухарики'
  OR name = 'чипсы'
  OR name = 'энергетический напиток'


5.11
SELECT
  SUM(
    CASE
      WHEN name = 'сухарики' THEN price * 3
      WHEN name = 'чипсы' THEN price * 2
      WHEN name = 'энергетический напиток' THEN price * 1
    END
  ) order_price
FROM
  products


5.12
SELECT
  COUNT(DISTINCT user_id) - COUNT(DISTINCT user_id) FILTER (WHERE action = 'cancel_order') users_count
FROM
  user_actions






